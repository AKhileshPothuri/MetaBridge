{"ast":null,"code":"var _jsxFileName = \"/Users/akhileshpothuri/Documents/GitHub/Database_Migrator/metabridge/frontend/src/pages/RolesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EntityTable from '../components/EntityTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RolesPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const apiUrl = process.env.REACT_APP_API_URL;\n  useEffect(() => {\n    axios.get(`${apiUrl}/roles/`).then(res => {\n      const dev = res.data.dev || [];\n      const prod = res.data.prod || [];\n      const allIds = Array.from(new Set([...dev.map(d => d.roleid), ...prod.map(p => p.roleid)]));\n      const merged = allIds.map(id => {\n        const devItem = dev.find(d => d.roleid === id);\n        const prodItem = prod.find(p => p.roleid === id);\n        return {\n          ...devItem,\n          ...prodItem,\n          roleid: id,\n          dev_present: !!devItem,\n          prod_present: !!prodItem,\n          dev_updated: (devItem === null || devItem === void 0 ? void 0 : devItem.date_updated) || '',\n          prod_updated: (prodItem === null || prodItem === void 0 ? void 0 : prodItem.date_updated) || ''\n        };\n      });\n      setData(merged);\n    });\n  }, [apiUrl]);\n  const handleSync = id => {\n    axios.post(`${apiUrl}/roles/sync/${id}`).then(() => {\n      window.location.reload();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EntityTable, {\n      data: data,\n      entityType: \"role\",\n      onSync: handleSync\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(RolesPage, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = RolesPage;\nexport default RolesPage;\nvar _c;\n$RefreshReg$(_c, \"RolesPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","EntityTable","jsxDEV","_jsxDEV","RolesPage","_s","data","setData","apiUrl","process","env","REACT_APP_API_URL","get","then","res","dev","prod","allIds","Array","from","Set","map","d","roleid","p","merged","id","devItem","find","prodItem","dev_present","prod_present","dev_updated","date_updated","prod_updated","handleSync","post","window","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","entityType","onSync","_c","$RefreshReg$"],"sources":["/Users/akhileshpothuri/Documents/GitHub/Database_Migrator/metabridge/frontend/src/pages/RolesPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EntityTable from '../components/EntityTable';\n\nconst RolesPage = () => {\n  const [data, setData] = useState([]);\n  const apiUrl = process.env.REACT_APP_API_URL;\n\n  useEffect(() => {\n    axios.get(`${apiUrl}/roles/`).then(res => {\n      const dev = res.data.dev || [];\n      const prod = res.data.prod || [];\n      const allIds = Array.from(new Set([...dev.map(d => d.roleid), ...prod.map(p => p.roleid)]));\n      const merged = allIds.map(id => {\n        const devItem = dev.find(d => d.roleid === id);\n        const prodItem = prod.find(p => p.roleid === id);\n        return {\n          ...devItem,\n          ...prodItem,\n          roleid: id,\n          dev_present: !!devItem,\n          prod_present: !!prodItem,\n          dev_updated: devItem?.date_updated || '',\n          prod_updated: prodItem?.date_updated || '',\n        };\n      });\n      setData(merged);\n    });\n  }, [apiUrl]);\n\n  const handleSync = (id) => {\n    axios.post(`${apiUrl}/roles/sync/${id}`).then(() => {\n      window.location.reload();\n    });\n  };\n\n  return (\n    <div>\n      <h2>Roles</h2>\n      <EntityTable data={data} entityType=\"role\" onSync={handleSync} />\n    </div>\n  );\n};\n\nexport default RolesPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAE5Cb,SAAS,CAAC,MAAM;IACdE,KAAK,CAACY,GAAG,CAAC,GAAGJ,MAAM,SAAS,CAAC,CAACK,IAAI,CAACC,GAAG,IAAI;MACxC,MAAMC,GAAG,GAAGD,GAAG,CAACR,IAAI,CAACS,GAAG,IAAI,EAAE;MAC9B,MAAMC,IAAI,GAAGF,GAAG,CAACR,IAAI,CAACU,IAAI,IAAI,EAAE;MAChC,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAC,CAAC,GAAGL,GAAG,CAACM,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,EAAE,GAAGP,IAAI,CAACK,GAAG,CAACG,CAAC,IAAIA,CAAC,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC;MAC3F,MAAME,MAAM,GAAGR,MAAM,CAACI,GAAG,CAACK,EAAE,IAAI;QAC9B,MAAMC,OAAO,GAAGZ,GAAG,CAACa,IAAI,CAACN,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKG,EAAE,CAAC;QAC9C,MAAMG,QAAQ,GAAGb,IAAI,CAACY,IAAI,CAACJ,CAAC,IAAIA,CAAC,CAACD,MAAM,KAAKG,EAAE,CAAC;QAChD,OAAO;UACL,GAAGC,OAAO;UACV,GAAGE,QAAQ;UACXN,MAAM,EAAEG,EAAE;UACVI,WAAW,EAAE,CAAC,CAACH,OAAO;UACtBI,YAAY,EAAE,CAAC,CAACF,QAAQ;UACxBG,WAAW,EAAE,CAAAL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,YAAY,KAAI,EAAE;UACxCC,YAAY,EAAE,CAAAL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,YAAY,KAAI;QAC1C,CAAC;MACH,CAAC,CAAC;MACF1B,OAAO,CAACkB,MAAM,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;EAEZ,MAAM2B,UAAU,GAAIT,EAAE,IAAK;IACzB1B,KAAK,CAACoC,IAAI,CAAC,GAAG5B,MAAM,eAAekB,EAAE,EAAE,CAAC,CAACb,IAAI,CAAC,MAAM;MAClDwB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC;EAED,oBACEpC,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAAqC,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdzC,OAAA,CAACF,WAAW;MAACK,IAAI,EAAEA,IAAK;MAACuC,UAAU,EAAC,MAAM;MAACC,MAAM,EAAEX;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAACvC,EAAA,CAtCID,SAAS;AAAA2C,EAAA,GAAT3C,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}